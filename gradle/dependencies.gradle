repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "JourneyMap"
        url "https://jm.gserv.me/repository/maven-public/"
    }
    maven {
        name "Rei"
        url "https://maven.shedaniel.me/"
    }
}

dependencies {
    apiCompileOnly (fg.deobf("com.ldtteam:domum_ornamentum:${project.domumOrnamentumVersion}:universal")){
        transitive = false
    }
    compileOnly (fg.deobf("com.ldtteam:domum_ornamentum:${project.domumOrnamentumVersion}:universal")){
        transitive = false
    }
    runtimeOnly (fg.deobf("com.ldtteam:domum_ornamentum:${project.domumOrnamentumVersion}:universal")){
        transitive = false
    }

    apiImplementation (fg.deobf("com.ldtteam:blockui:${project.blockUI_version}")){
        transitive = false
    }
    implementation (fg.deobf("com.ldtteam:blockui:${project.blockUI_version}")){
        transitive = false
    }

    apiImplementation (fg.deobf("com.ldtteam:structurize:${project.structurize_version}")){
        transitive = false
    }
    implementation (fg.deobf("com.ldtteam:structurize:${project.structurize_version}")){
        transitive = false
    }

    implementation (fg.deobf("com.ldtteam:multipiston:${project.multiPistonVersion}")){
        transitive = false
    }

    datagenLibrary (("com.ldtteam:datagenerators:${project.dataGeneratorsVersion}")){
        transitive = false
    }
    library (("com.ldtteam:datagenerators:${project.dataGeneratorsVersion}")) {
        transitive = false
    }

    // optional compat mods (not included in test environment by default)

    compileOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-common-api:${project.jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-forge-api:${project.jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-forge:${project.jei_version}")

    compileOnly fg.deobf("info.journeymap:journeymap-api:${project.jmapApiVersion}")
    if (project.hasProperty("runWithJourneymap") && project.runWithJourneymap.toBoolean()) {
         runtimeOnly fg.deobf("flat:journeymap:${project.jmapMcVersion}-${project.jmapVersion}-forge")
    }
    // replace "compileOnly" with "library" when you want to include it for testing
    // compileOnly fg.deobf("slimeknights.tconstruct:TConstruct:${project.exactMinecraftVersion}-${project.tinkersConstructVersion}")
    // compileOnly fg.deobf("slimeknights.mantle:Mantle:${project.exactMinecraftVersion}-${project.mantleVersion}")

    // apiCompileOnly fg.deobf("slimeknights.mantle:Mantle:${project.exactMinecraftVersion}-${project.mantleVersion}")
    // apiCompileOnly fg.deobf("slimeknights.tconstruct:TConstruct:${project.exactMinecraftVersion}-${project.tinkersConstructVersion}")
}
