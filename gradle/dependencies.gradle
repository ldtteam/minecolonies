repositories {
    maven {
        name "JEI"
        url 'https://maven.blamejared.com/'
    }
    maven {
        name "JourneyMap"
        url "https://jm.gserv.me/repository/maven-public/"
    }
    maven {
        name "Rei"
        url "https://maven.shedaniel.me/"
    }
}

dependencies {
    implementation ("com.ldtteam:domum-ornamentum:${project.domumOrnamentumVersion}"){
        transitive = false
    }

    implementation ("com.ldtteam:blockui:${project.blockUI_version}"){
        transitive = false
    }

    implementation ("com.ldtteam:structurize:${project.structurize_version}"){
        transitive = false
    }

    implementation ("com.ldtteam:multipiston:${project.multiPistonVersion}"){
        transitive = false
    }

    implementation ("com.ldtteam:datagenerators:${project.dataGeneratorsVersion}:universal") {
        transitive = false
    }

    // optional compat mods (not included in test environment by default)

    compileOnly "mezz.jei:jei-${project.jei_mcversion}-neoforge-api:${project.jei_version}"
    runtimeOnly "mezz.jei:jei-${project.jei_mcversion}-neoforge:${project.jei_version}"

    compileOnly "info.journeymap:journeymap-api-neoforge:${project.jmapApiVersion}"
    if (project.hasProperty("runWithJourneymap") && project.runWithJourneymap.toBoolean()) {
         runtimeOnly "flat:journeymap-neoforge:${project.jmapVersion}"
    }
    // replace "compileOnly" with "implementation" when you want to include it for testing
    // compileOnly "slimeknights.tconstruct:TConstruct:${project.exactMinecraftVersion}-${project.tinkersConstructVersion}")
    // compileOnly "slimeknights.mantle:Mantle:${project.exactMinecraftVersion}-${project.mantleVersion}")

    // apiCompileOnly "slimeknights.mantle:Mantle:${project.exactMinecraftVersion}-${project.mantleVersion}")
    // apiCompileOnly "slimeknights.tconstruct:TConstruct:${project.exactMinecraftVersion}-${project.tinkersConstructVersion}")
}
