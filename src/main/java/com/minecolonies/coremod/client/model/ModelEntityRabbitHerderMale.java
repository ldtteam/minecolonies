package com.minecolonies.coremod.client.model;
// Made with Blockbench 3.5.1
// Exported for Minecraft version 1.15
// Paste this class into your mod and generate all required imports

import com.minecolonies.api.client.render.modeltype.CitizenModel;
import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;
import net.minecraft.client.renderer.model.ModelRenderer;

public class ModelEntityRabbitHerderMale extends CitizenModel<AbstractEntityCitizen>
{
    public ModelEntityRabbitHerderMale()
    {
        ModelRenderer headDetail;
        ModelRenderer hair;
        ModelRenderer beard;
        ModelRenderer carrot1;
        ModelRenderer carrot2;

        texWidth = 128;
        texHeight = 64;

        leftLeg = new ModelRenderer(this);
        leftLeg.setPos(2.0F, 12.0F, 0.0F);
        leftLeg.texOffs(0, 16).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, 0.0F, false);

        head = new ModelRenderer(this);
        head.setPos(0.0F, 0.0F, 0.0F);
        head.texOffs(0, 0).addBox(-4.0F, -8.0F, -4.0F, 8.0F, 8.0F, 8.0F, 0.0F, false);

        headDetail = new ModelRenderer(this);
        headDetail.setPos(0.0F, 24.0F, 0.0F);
        head.addChild(headDetail);
        headDetail.texOffs(32, 0).addBox(-4.0F, -32.0F, -4.0F, 8.0F, 8.0F, 8.0F, 0.5F, true);

        hair = new ModelRenderer(this);
        hair.setPos(0.0F, 24.0F, 0.0F);
        head.addChild(hair);
        hair.texOffs(72, 60).addBox(-4.25F, -25.0F, 1.02F, 0.25F, 1.25F, 2.0F, 0.0F, false);
        hair.texOffs(79, 46).addBox(4.0F, -25.0F, 1.02F, 0.25F, 1.25F, 2.0F, 0.0F, false);
        hair.texOffs(64, 61).addBox(-4.25F, -26.0F, 1.02F, 0.25F, 1.0F, 1.0F, 0.0F, false);
        hair.texOffs(72, 47).addBox(4.0F, -26.0F, 1.02F, 0.25F, 1.0F, 1.0F, 0.0F, false);
        hair.texOffs(84, 46).addBox(4.0F, -26.0F, 3.02F, 0.35F, 2.0F, 1.0F, 0.0F, false);
        hair.texOffs(84, 46).addBox(4.0F, -32.25F, 0.02F, 0.35F, 6.25F, 4.0F, 0.0F, false);
        hair.texOffs(50, 56).addBox(2.75F, -32.25F, -4.48F, 1.6F, 2.75F, 1.0F, 0.0F, false);
        hair.texOffs(58, 46).addBox(4.0F, -32.25F, -3.48F, 0.35F, 3.5F, 1.75F, 0.0F, false);
        hair.texOffs(63, 46).addBox(4.0F, -32.25F, -1.73F, 0.35F, 4.25F, 1.75F, 0.0F, false);
        hair.texOffs(68, 47).addBox(4.0F, -26.0F, 2.02F, 0.35F, 1.0F, 1.0F, 0.0F, false);
        hair.texOffs(68, 61).addBox(-4.35F, -26.0F, 2.02F, 0.35F, 1.0F, 1.0F, 0.0F, true);
        hair.texOffs(78, 54).addBox(-4.35F, -32.25F, -1.73F, 0.35F, 4.25F, 1.75F, 0.0F, true);
        hair.texOffs(73, 55).addBox(-4.35F, -32.25F, -3.48F, 0.35F, 3.5F, 1.75F, 0.0F, true);
        hair.texOffs(68, 55).addBox(-4.35F, -32.25F, -4.48F, 1.6F, 2.75F, 1.0F, 0.0F, true);
        hair.texOffs(55, 56).addBox(-2.75F, -32.25F, -4.48F, 5.5F, 2.25F, 1.0F, 0.0F, true);
        hair.texOffs(25, 54).addBox(-4.0F, -32.25F, -3.48F, 8.0F, 2.25F, 7.5F, 0.0F, true);
        hair.texOffs(39, 48).addBox(-4.25F, -32.25F, 4.02F, 8.5F, 6.75F, 0.25F, 0.0F, true);
        hair.texOffs(34, 46).addBox(3.75F, -25.5F, 4.02F, 0.5F, 1.5F, 0.25F, 0.0F, true);
        hair.texOffs(32, 46).addBox(-4.25F, -25.5F, 4.02F, 0.5F, 1.5F, 0.25F, 0.0F, true);
        hair.texOffs(39, 45).addBox(-3.75F, -25.5F, 4.02F, 7.5F, 1.75F, 0.25F, 0.0F, true);
        hair.texOffs(93, 46).addBox(-4.35F, -32.25F, 0.02F, 0.35F, 6.25F, 4.0F, 0.0F, true);
        hair.texOffs(60, 60).addBox(-4.35F, -26.0F, 3.02F, 0.35F, 2.0F, 1.0F, 0.0F, true);

        beard = new ModelRenderer(this);
        beard.setPos(0.0F, 0.0F, 0.0F);
        hair.addChild(beard);
        beard.texOffs(72, 46).addBox(4.0F, -26.0F, -4.23F, 0.25F, 2.25F, 5.25F, 0.0F, false);
        beard.texOffs(39, 48).addBox(1.0F, -26.0F, -4.25F, 3.0F, 2.25F, 0.25F, 0.0F, false);
        beard.texOffs(39, 48).addBox(-1.0F, -27.0F, -4.23F, 2.0F, 1.0F, 0.75F, 0.0F, false);
        beard.texOffs(39, 48).addBox(1.0F, -27.0F, -4.23F, 2.0F, 2.0F, 0.75F, 0.0F, false);
        beard.texOffs(39, 48).addBox(0.5F, -25.0F, -4.23F, 3.0F, 2.0F, 0.75F, 0.0F, false);
        beard.texOffs(39, 48).addBox(-3.5F, -25.0F, -4.23F, 3.0F, 2.0F, 0.75F, 0.0F, false);
        beard.texOffs(39, 48).addBox(-4.0F, -26.0F, -4.25F, 3.0F, 2.25F, 0.25F, 0.0F, false);
        beard.texOffs(39, 48).addBox(-3.0F, -27.0F, -4.23F, 2.0F, 2.0F, 0.75F, 0.0F, false);
        beard.texOffs(77, 56).addBox(-4.25F, -26.0F, -4.23F, 0.25F, 2.25F, 5.25F, 0.0F, false);
        beard.texOffs(39, 48).addBox(-1.5F, -25.0F, -4.24F, 3.0F, 2.0F, 0.75F, 0.0F, false);

        rightLeg = new ModelRenderer(this);
        rightLeg.setPos(-2.0F, 12.0F, 0.0F);
        rightLeg.texOffs(0, 16).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, 0.0F, true);

        leftArm = new ModelRenderer(this);
        leftArm.setPos(5.0F, 2.0F, 0.0F);
        leftArm.texOffs(40, 16).addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, 0.0F, true);
        leftArm.texOffs(20, 32).addBox(-1.5F, 5.0F, -2.25F, 5.0F, 0.75F, 4.5F, 0.0F, false);

        rightArm = new ModelRenderer(this);
        rightArm.setPos(-5.0F, 2.0F, 0.0F);
        rightArm.texOffs(40, 16).addBox(-3.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, 0.0F, false);
        rightArm.texOffs(0, 32).addBox(-3.5F, 5.0F, -2.25F, 5.0F, 0.75F, 4.5F, 0.0F, true);

        body = new ModelRenderer(this);
        body.setPos(0.0F, 0.0F, 0.0F);
        body.texOffs(16, 16).addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, 0.0F, false);
        body.texOffs(5, 46).addBox(3.0F, 0.0F, -3.25F, 1.0F, 10.0F, 1.25F, 0.0F, false);
        body.texOffs(0, 46).addBox(-4.0F, 0.0F, -3.25F, 1.0F, 10.0F, 1.25F, 0.0F, false);
        body.texOffs(9, 46).addBox(-4.0F, 10.0F, -6.0F, 8.0F, 1.0F, 4.0F, 0.0F, false);
        body.texOffs(6, 61).addBox(-4.0F, 9.0F, -6.0F, 8.0F, 1.0F, 1.0F, 0.0F, false);
        body.texOffs(0, 61).addBox(-4.0F, 9.0F, -5.0F, 1.0F, 1.0F, 1.75F, 0.0F, false);
        body.texOffs(0, 58).addBox(3.0F, 9.0F, -5.0F, 1.0F, 1.0F, 1.75F, 0.0F, false);
        body.texOffs(62, 34).addBox(-3.0F, 9.5F, -5.0F, 6.0F, 0.5F, 3.0F, 0.0F, false);
        body.texOffs(10, 52).addBox(-3.0F, -0.25F, -2.25F, 6.0F, 0.75F, 4.5F, 0.0F, false);

        carrot1 = new ModelRenderer(this);
        carrot1.setPos(-15.5F, 4.0F, 29.0F);
        body.addChild(carrot1);
        carrot1.texOffs(63, 25).addBox(14.8647F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(62, 24).addBox(14.6948F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(62, 25).addBox(14.8647F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 24).addBox(14.6948F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(64, 24).addBox(14.6948F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 24).addBox(14.6948F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(62, 23).addBox(14.525F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 23).addBox(14.525F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 23).addBox(14.525F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 23).addBox(14.525F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 23).addBox(14.525F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 22).addBox(14.3552F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 22).addBox(14.3552F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 22).addBox(14.3552F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 22).addBox(14.3552F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 21).addBox(14.1853F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(64, 21).addBox(14.1853F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 21).addBox(14.1853F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 21).addBox(14.1853F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 21).addBox(14.1853F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 22).addBox(14.3552F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 22).addBox(14.3552F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 21).addBox(14.1853F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 21).addBox(14.1853F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 20).addBox(14.0155F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 20).addBox(14.0155F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 20).addBox(14.0155F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 20).addBox(14.0155F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 20).addBox(14.0155F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 20).addBox(14.0155F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(64, 20).addBox(14.0155F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(63, 19).addBox(13.8457F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 19).addBox(13.8457F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 19).addBox(13.8457F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 19).addBox(13.8457F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 19).addBox(13.8457F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 19).addBox(13.8457F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 19).addBox(13.8457F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 19).addBox(13.8457F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 20).addBox(14.0155F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 20).addBox(14.0155F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 19).addBox(13.8457F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 19).addBox(13.8457F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 18).addBox(13.6759F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 18).addBox(13.6759F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(74, 18).addBox(13.6759F, 5.1066F, -31.692F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(75, 18).addBox(13.6759F, 5.1066F, -31.5222F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(74, 17).addBox(13.506F, 5.1066F, -31.692F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 17).addBox(13.506F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 17).addBox(13.506F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 17).addBox(13.506F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 15).addBox(13.3362F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 16).addBox(13.3362F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 16).addBox(13.3362F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 14).addBox(12.9966F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 14).addBox(12.9966F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 15).addBox(13.1664F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 15).addBox(13.1664F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 14).addBox(12.9966F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 14).addBox(12.9966F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 15).addBox(13.1664F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 16).addBox(13.3362F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 17).addBox(13.506F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 18).addBox(13.6759F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(71, 18).addBox(13.6759F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 18).addBox(13.6759F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 17).addBox(13.506F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 16).addBox(13.3362F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 15).addBox(13.1664F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 14).addBox(12.9966F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 18).addBox(13.6759F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 18).addBox(13.6759F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 18).addBox(13.6759F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 18).addBox(13.6759F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 17).addBox(13.506F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 17).addBox(13.506F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 17).addBox(13.506F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 17).addBox(13.506F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 16).addBox(13.3362F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 16).addBox(13.3362F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 16).addBox(13.3362F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 15).addBox(13.1664F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 15).addBox(13.1664F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 15).addBox(13.1664F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 14).addBox(12.9966F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 14).addBox(12.9966F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(66, 14).addBox(12.9966F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(65, 14).addBox(12.9966F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 13).addBox(12.8267F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 13).addBox(12.8267F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(70, 13).addBox(12.8267F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(72, 13).addBox(12.8267F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(73, 13).addBox(12.8267F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(69, 12).addBox(12.6569F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(68, 12).addBox(12.6569F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);
        carrot1.texOffs(67, 12).addBox(12.6569F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, false);

        carrot2 = new ModelRenderer(this);
        carrot2.setPos(15.5F, 4.0F, 29.0F);
        body.addChild(carrot2);
        carrot2.texOffs(63, 25).addBox(-15.0345F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(62, 24).addBox(-14.8647F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(62, 25).addBox(-15.0345F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 24).addBox(-14.8647F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(64, 24).addBox(-14.8647F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 24).addBox(-14.8647F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(62, 23).addBox(-14.6948F, 5.1066F, -33.73F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 23).addBox(-14.6948F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 23).addBox(-14.6948F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 23).addBox(-14.6948F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 23).addBox(-14.6948F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 22).addBox(-14.525F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 22).addBox(-14.525F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 22).addBox(-14.525F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 22).addBox(-14.525F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 21).addBox(-14.3552F, 5.1066F, -33.5601F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(64, 21).addBox(-14.3552F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 21).addBox(-14.3552F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 21).addBox(-14.3552F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 21).addBox(-14.3552F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 22).addBox(-14.525F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 22).addBox(-14.525F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 21).addBox(-14.3552F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 21).addBox(-14.3552F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 20).addBox(-14.1853F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 20).addBox(-14.1853F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 20).addBox(-14.1853F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 20).addBox(-14.1853F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 20).addBox(-14.1853F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 20).addBox(-14.1853F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(64, 20).addBox(-14.1853F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(63, 19).addBox(-14.0155F, 5.1066F, -33.3903F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 19).addBox(-14.0155F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 19).addBox(-14.0155F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 19).addBox(-14.0155F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 19).addBox(-14.0155F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 19).addBox(-14.0155F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 19).addBox(-14.0155F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 19).addBox(-14.0155F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 20).addBox(-14.1853F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 20).addBox(-14.1853F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 19).addBox(-14.0155F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 19).addBox(-14.0155F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 18).addBox(-13.8457F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 18).addBox(-13.8457F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(74, 18).addBox(-13.8457F, 5.1066F, -31.692F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(75, 18).addBox(-13.8457F, 5.1066F, -31.5222F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(74, 17).addBox(-13.6759F, 5.1066F, -31.692F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 17).addBox(-13.6759F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 17).addBox(-13.6759F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 17).addBox(-13.6759F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 15).addBox(-13.506F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 16).addBox(-13.506F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 16).addBox(-13.506F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 14).addBox(-13.1664F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 14).addBox(-13.1664F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 15).addBox(-13.3362F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 15).addBox(-13.3362F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 14).addBox(-13.1664F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 14).addBox(-13.1664F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 15).addBox(-13.3362F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 16).addBox(-13.506F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 17).addBox(-13.6759F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 18).addBox(-13.8457F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(71, 18).addBox(-13.8457F, 5.1066F, -32.2015F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 18).addBox(-13.8457F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 17).addBox(-13.6759F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 16).addBox(-13.506F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 15).addBox(-13.3362F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 14).addBox(-13.1664F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 18).addBox(-13.8457F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 18).addBox(-13.8457F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 18).addBox(-13.8457F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 18).addBox(-13.8457F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 17).addBox(-13.6759F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 17).addBox(-13.6759F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 17).addBox(-13.6759F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 17).addBox(-13.6759F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 16).addBox(-13.506F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 16).addBox(-13.506F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 16).addBox(-13.506F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 15).addBox(-13.3362F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 15).addBox(-13.3362F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 15).addBox(-13.3362F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 14).addBox(-13.1664F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 14).addBox(-13.1664F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(66, 14).addBox(-13.1664F, 5.1066F, -33.0507F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(65, 14).addBox(-13.1664F, 5.1066F, -33.2205F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 13).addBox(-12.9966F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 13).addBox(-12.9966F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(70, 13).addBox(-12.9966F, 5.1066F, -32.3713F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(72, 13).addBox(-12.9966F, 5.1066F, -32.0317F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(73, 13).addBox(-12.9966F, 5.1066F, -31.8619F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(69, 12).addBox(-12.8267F, 5.1066F, -32.5412F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(68, 12).addBox(-12.8267F, 5.1066F, -32.711F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);
        carrot2.texOffs(67, 12).addBox(-12.8267F, 5.1066F, -32.8808F, 0.1698F, 0.1698F, 0.1698F, 0.0F, true);

        hat.visible = false;
    }

    public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z)
    {
        modelRenderer.xRot = x;
        modelRenderer.yRot = y;
        modelRenderer.zRot = z;
    }
}
